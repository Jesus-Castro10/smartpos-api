name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  # ðŸ”¹ Job 1: Lint
  lint:
    name: Run Linter (Checkstyle)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Maven
        run: sudo apt-get update && sudo apt-get install -y maven

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          check-latest: false
          cache: maven

      - name: Run Checkstyle
        run: mvn checkstyle:check

  # ðŸ”¹ Job 2: Tests con Coverage
  test:
    name: Run Tests with Coverage
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          check-latest: false
          cache: maven

      - name: Run tests with coverage
        run: mvn clean verify

      - name: Enforce coverage â‰¥ 90%
        run: |
          COVERAGE=$(xmllint --xpath "string(//counter[@type='INSTRUCTION']/@covered)" target/site/jacoco/jacoco.xml)
          MISSED=$(xmllint --xpath "string(//counter[@type='INSTRUCTION']/@missed)" target/site/jacoco/jacoco.xml)
          TOTAL=$((COVERAGE + MISSED))
          PERCENT=$((100 * COVERAGE / TOTAL))
          echo "Coverage: $PERCENT%"
          if [ $PERCENT -lt 90 ]; then
            echo "Coverage below 90%! Failing..."
            exit 1
          fi

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: target/site/jacoco/

  # ðŸ”¹ Job 3: Build
  build:
    name: Package Application
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          check-latest: false
          cache: maven

      - name: Package app
        run: mvn package -DskipTests

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: springboot-app
          path: target/*.jar

  # ðŸ”¹ Job 4: Docker
  docker:
    name: Build & Validate Docker Image
    runs-on: ubuntu-latest
    needs: build
    if: success()
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build Docker image
        run: docker build -t springboot-app:latest .

      - name: Run container for validation
        run: docker run -d -p 8080:8080 --name springboot-app springboot-app:latest

      - name: Wait for app startup
        run: sleep 15

      - name: Check app is running
        run: curl -f http://localhost:8080 || (docker logs springboot-app && exit 1)